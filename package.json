{
	"name": "sc2galaxy",
	"displayName": "StarCraft 2 Galaxy Script",
	"description": "Language support for StarCraft 2 Galaxy Script",
	"version": "1.10.4",
	"publisher": "talv",
	"license": "MIT",
	"engines": {
		"vscode": "^1.64.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/Talv/vscode-sc2-galaxy.git"
	},
	"keywords": [
		"sc2",
		"starcraft",
		"galaxy",
		"galaxy script"
	],
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"onLanguage:galaxy"
	],
	"main": "./out/extension",
	"icon": "icon.png",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "sc2galaxy",
			"properties": {
				"sc2galaxy.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "messages",
					"markdownDescription": "Logging verbosity of communication between language server."
				},
				"sc2galaxy.trace.service": {
					"scope": "window",
					"type": "string",
					"enum": [
						"error",
						"warn",
						"info",
						"verbose",
						"debug"
					],
					"default": "info",
					"markdownDescription": "Logging verbosity of intellisense service."
				},
				"sc2galaxy.dataPath": {
					"scope": "window",
					"type": "string",
					"default": null,
					"markdownDescription": "Custom path to SC2 data repository with builtin mods, such as local copy of [SC2GameData](https://github.com/SC2Mapster/SC2GameData)."
				},
				"sc2galaxy.fallbackDependency": {
					"scope": "window",
					"type": "string",
					"enum": [
						"mods/core.sc2mod",
						"mods/liberty.sc2mod",
						"mods/swarm.sc2mod",
						"mods/void.sc2mod",
						"mods/libertymulti.sc2mod",
						"mods/swarmmulti.sc2mod",
						"mods/voidmulti.sc2mod",
						"mods/balancemulti.sc2mod",
						"mods/starcoop/starcoop.sc2mod",
						"campaigns/liberty.sc2campaign",
						"campaigns/swarm.sc2campaign",
						"campaigns/void.sc2campaign",
						"campaigns/libertystory.sc2campaign",
						"campaigns/swarmstory.sc2campaign",
						"campaigns/voidstory.sc2campaign"
					],
					"default": "mods/liberty.sc2mod",
					"markdownDescription": "Fallback mod to use whenever dependency chain cannot be determined automatically from project's workspace."
				},
				"sc2galaxy.archivePath": {
					"scope": "window",
					"type": "string",
					"default": null,
					"markdownDescription": "Path (relative or absolute) to an active document (SC2Map/SC2Mod) within the workspace. Active document will dictate what other dependencies and resources will be loaded. This field is optional for non-complex workspaces, such as the ones with a single `.sc2map` in it."
				},
				"sc2galaxy.metadata.loadLevel": {
					"scope": "window",
					"type": "string",
					"enum": [
						"None",
						"Core",
						"Builtin",
						"Default"
					],
					"enumDescriptions": [
						"Do not load any metadata.",
						"Load limit to native library and other data from `core.sc2mod`.",
						"Load limit to builtin dependencies of an active docoument.",
						"Load limit to all dependencies of an active document."
					],
					"default": "Default",
					"markdownDescription": "Include trigger component during indexing"
				},
				"sc2galaxy.metadata.localization": {
					"scope": "window",
					"type": "string",
					"enum": [
						"enUS",
						"deDE",
						"esES",
						"frFR",
						"ruRU",
						"koKR",
						"zhCN",
						"zhTW",
						"ptBR",
						"plPL",
						"esMX",
						"itIT"
					],
					"default": "enUS",
					"markdownDescription": "Localization to use for documentation. **Only `enUS` files are bundled with the extension.** In order to use different localization, you need to extract necessary game files to a custom directory, configured in `sc2galaxy.dataPath`."
				},
				"sc2galaxy.s2mod.sources": {
					"scope": "window",
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"markdownDescription": "Directories containing SC2Mod dependencies. List will be resolved in the given order. It is advised to provide path to SC2 installation directory. **Note**: do not include `mods` folder within the path, because it's already included within name of a dependency."
				},
				"sc2galaxy.s2mod.overrides": {
					"scope": "window",
					"type": "object",
					"markdownDescription": "Local overrides of SC2Mod archives. `{\"mods/my-mod.sc2mod\": \"absolute or workspace relative path\"}`."
				},
				"sc2galaxy.s2mod.extra": {
					"scope": "window",
					"type": "object",
					"markdownDescription": "Extra dependencies which should be indexed. `{\"mods/my-mod.sc2mod\": \"absolute or workspace relative path\"}`."
				},
				"sc2galaxy.documentUpdateDelay": {
					"scope": "window",
					"type": "number",
					"default": 100,
					"minimum": 1,
					"markdownDescription": "Minimum idle time (ms) required before reindexing dirty files."
				},
				"sc2galaxy.documentDiagnosticsDelay": {
					"scope": "window",
					"type": [
						"number",
						"boolean"
					],
					"default": 400,
					"minimum": 0,
					"markdownDescription": "Minimum idle time (ms) required before providing code diagnostics for dirty files (value from `documentUpdateDelay` is contributed). Use `false` to disable - in which case diagnostics will be provided only on save."
				},
				"sc2galaxy.completion.functionExpand": {
					"scope": "resource",
					"type": "string",
					"enum": [
						"None",
						"Parenthesis",
						"ArgumentsNull",
						"ArgumentsDefault"
					],
					"enumDescriptions": [
						"Feature disabled.",
						"Expand to `func()`.",
						"Expand and placehold all parameters using `null` like values (`0`, `false` etc.), applicable to a given type of parameter.",
						"Expand and placehold all parameters using default values from trigger libraries metadata (i.e. `UnitCreate(0, null, c_unitCreateConstruct, 1, null, 270.0)`). If function isn't part of any trigger library, the behavior will fallback to `ArgumentsNull`."
					],
					"default": "None",
					"markdownDescription": "[Completion] Describes the behavior of expanding a function when suggestion from code completions is accepted."
				},
				"sc2galaxy.references.currentWorkspaceOnly": {
					"scope": "window",
					"type": "boolean",
					"default": false,
					"markdownDescription": "[References] Search only within files from current workspace."
				}
			}
		},
		"languages": [
			{
				"id": "galaxy",
				"aliases": [
					"SC2 Galaxy Script",
					"galaxy"
				],
				"extensions": [
					".galaxy"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "galaxy",
				"scopeName": "source.galaxy",
				"path": "./syntaxes/galaxy.json"
			}
		],
		"snippets": [
			{
				"language": "galaxy",
				"path": "./snippets/general.json"
			}
		],
		"commands": [
			{
				"command": "s2galaxy.verifyScript",
				"title": "Verify script",
				"category": "SC2 Galaxy"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "s2galaxy.verifyScript",
					"when": "resourceLangId == galaxy"
				}
			],
			"commandPalette": [
				{
					"command": "s2galaxy.verifyScript",
					"when": "resourceLangId == galaxy"
				}
			]
		}
	},
	"scripts": {
		"build": "tsc -p ./",
		"build:watch": "tsc -watch -p ./",
		"vscode:prepublish": "tsc -p ./",
		"test": "node ./node_modules/vscode/bin/test"
	},
	"dependencies": {
		"path": "^0.12.7",
		"plaxtony": "^1.10.4",
		"vscode-languageclient": "6.2.0-next.2"
	},
	"devDependencies": {
		"@types/node": "^14.14.31",
		"@types/vscode": "~1.64.0",
		"typescript": "^3.5.3"
	},
	"__metadata": {
		"id": "1e8db834-5c91-4e2f-93e8-642fb1faa3f6",
		"publisherDisplayName": "Talv",
		"publisherId": "60b06097-c0b9-440b-aa23-09911f15089c"
	}
}
